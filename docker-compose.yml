version: "3.8"

services:
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_USERNAME: ${DATABASE_API_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_API_PASSWORD}
      DATABASE_TEST_USERNAME: ${DATABASE_ADMIN_USERNAME}
      DATABASE_TEST_PASSWORD: ${DATABASE_ADMIN_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_TEST_NAME: ${DATABASE_TEST_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      TOKEN_STORE_USERNAME: ${TOKEN_STORE_API_USERNAME}
      TOKEN_STORE_PASSWORD: ${TOKEN_STORE_API_PASSWORD}
      TOKEN_STORE_TEST_USERNAME: ${TOKEN_STORE_ADMIN_USERNAME}
      TOKEN_STORE_TEST_PASSWORD: ${TOKEN_STORE_ADMIN_PASSWORD}
      TOKEN_STORE_NAME: ${TOKEN_STORE_NAME}
      TOKEN_STORE_TEST_NAME: ${TOKEN_STORE_TEST_NAME}
      TOKEN_STORE_HOST: ${TOKEN_STORE_HOST}
    ports:
    - 80:80
    volumes:
    - ./services/api/src:/src

  database:
    build:
      context: ./services/database
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${DATABASE_ADMIN_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_ADMIN_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
    - 5432:5432
    volumes:
    - api-data:/var/lib/postgresql/data

  token_store:
    build:
      context: ./services/token_store
      dockerfile: Dockerfile
      args:
        TOKEN_STORE_PASSWORD: ${TOKEN_STORE_ADMIN_PASSWORD}
    ports:
    - 6379:6379

volumes:
  api-data:
